version: "3.7"
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        POETRY_DEV: ${POETRY_DEV:-true}
        WAIT_BIN: ${WAIT_BIN:-wait}
    env_file:
      - env-api-dev
    environment:
      DEBUGPY: ${DEBUGPY:-true}
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-northwind}:${POSTGRES_PASSWORD:-northwind}@${DB_HOST:-postgres}:5432/${POSTGRES_DB:-northwind}
      WAIT_HOSTS: postgres:5432,postgres-test:5432,redis:6379
      WAIT_LOGGER_LEVEL: error
      WAIT_TIMEOUT: 60
      WAIT_SLEEP_INTERVAL: 5
      PYDEVD_DISABLE_FILE_VALIDATION: 1
      REDIS_URL: ${REDIS_URL-redis://redis:6379/0}
      REDIS_USER: ${REDIS_USER-default}
      REDIS_PASSWORD: ${REDIS_PASSWORD-redis}
    depends_on:
      - postgres
      #   - postgres-test
      - redis

    volumes:
      - ./src/:/app:cached
    ports:
      - 8000:80
      - 5678:5678 # debupy for webapp
      - 5679:5679 # debupy for console
    command:
      - /bin/sh
      - -c
      - |
        /wait && bash -c \
        'if [ "${DEBUGPY}" == "true" ]; then \
        python -m debugpy --listen 0.0.0.0:5678 \
        -m uvicorn app.asgi:app --host 0.0.0.0 --port 80 \
        --reload --reload-dir /app --log-config logging.dev.yaml; \
        else \
        python -m uvicorn app.asgi:app --host 0.0.0.0 --port 80 \
        --reload --reload-dir /app --log-config logging.dev.yaml; \
        fi'
    restart: on-failure

  postgres:
    image: postgres:16.1
    environment:
      POSTGRES_DB: ${POSTGRES_DB-northwind}
      POSTGRES_USER: ${POSTGRES_USER-northwind}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD-northwind}
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data:delegated
      - ./data/northwind_start.sql:/docker-entrypoint-initdb.d/00_northwind_start.sql
      - ./data:/data

  postgres-test:
    image: postgres:16.1
    environment:
      POSTGRES_DB: ${POSTGRES_DB-northwind}
      POSTGRES_USER: ${POSTGRES_USER-northwind}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD-northwind}
    volumes:
      - postgres_test_data:/var/lib/postgresql/data:delegated
      - ./data/northwind_start.sql:/docker-entrypoint-initdb.d/00_northwind_start.sql
  redis:
    image: redis:latest
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD-redis}
    command:
      - /bin/sh
      - -c
      - redis-server --appendonly yes --requirepass $$REDIS_PASSWORD
    volumes:
      - redis_data:/data:delegated

volumes:
  postgres_data:
  postgres_test_data:
  redis_data:
